{
  "name": "node-haste",
  "version": "1.2.6",
  "haste": {
    "name": "node-haste"
  },
  "main": "main.js",
  "dependencies": {
    "esprima-fb": "4001.1001.0-dev-harmony-fb"
  },
  "jstest": {
    "useAutoMock": false
  },
  "scripts": {
    "test": "jasmine-node --matchall __tests__"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/facebook/node-haste.git"
  },
  "devDependencies": {
    "jasmine-node": "~1.13.0"
  },
  "readme": "# node-haste [![Build Status](https://travis-ci.org/facebook/node-haste.png?branch=master)](https://travis-ci.org/facebook/node-haste)\n\nNode Haste is a dependency management system for static resources for node.js\n\n\n## How Does It Work?\n\nThe goal of node haste is to build or update a map of static resources in given\ndirectories. For that it scans provided directories for static resources: JS,\nCSS, Images, Tests, etc. Once the resources are found haste compares mtimes to\nthe resources in an existing map. It also checks for package.json configuration\nchanges. It then starts parsing all affected files to extract useful\ninformation: dependencies, processing options, size, etc.\nOnce scanned it will update the map with the new data.\n\n\n## Example\n\n```js\nvar Haste = require('node-haste').Haste;\nvar loaders = require('node-haste').loaders;\n\n// configure haste facade\nvar haste = new Haste(\n  [\n    new loaders.JSLoader({ networkSize: true }),\n    new loaders.CSSLoader({ networkSize: true }),\n    new ProjectConfigurationLoader(),\n    new ResourceLoader()\n  ],\n  ['html']\n);\n\n// return current map, utilizing cache if available\nhaste.update('.cache', function(map) {\n  assert(map instanceof ResourceMap);\n});\n```\n\n\n## Testing\n\nNode haste is covered with unit tests. The unit tests use Jasmine. Any\ncompatible runner can be used to run the tests.\n\n```sh\n$ npm install\n$ npm test\n```\n",
  "readmeFilename": "README.md",
  "description": "Node Haste is a dependency management system for static resources for node.js",
  "bugs": {
    "url": "https://github.com/facebook/node-haste/issues"
  },
  "homepage": "https://github.com/facebook/node-haste",
  "_id": "node-haste@1.2.6",
  "_from": "node-haste@^1.2.5"
}
