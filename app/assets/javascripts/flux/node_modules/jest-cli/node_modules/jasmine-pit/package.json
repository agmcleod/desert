{
  "name": "jasmine-pit",
  "version": "1.0.4",
  "main": "index.js",
  "homepage": "https://github.com/jeffmo/jasmine-pit",
  "keywords": [
    "testing promises jasmine pit jasmine-pit promise error"
  ],
  "author": {
    "name": "Jeff Morrison",
    "email": "jeff@anafx.com"
  },
  "repository": {
    "type": "git",
    "url": "git@github.com:jeffmo/jasmine-pit.git"
  },
  "readme": "# jasmine-pit\n\nWriting tests for promises in jasmine is kind of a pain in the ass.\njasmine-pit makes doing such things a tiny bit easier by providing an augmented\nversion of `it()` (called `pit()`) that allows you to simply return a promise that may eventually\nassert expect()s (or propogate errors).\n\n## Example\n```js\n\njasminePit.install(window);\n\ndescribe('MyTestSuite', functtion() {\n  pit('Spec 1', function() {\n    return funcThatReturnsPromise().then(function(stuff) {\n      expect(stuff).toBe(stuff_i_expect_it_to_be);\n    });\n  });\n});\n```\n\nThis will execute the promise chain and, if any errors occur along the way, they\nwill be propogated up to jasmine and reported as normal.\n\nDon't be afraid to take a look at the source. The definition for `pit()` is stupid\nsimple.\n",
  "readmeFilename": "README.md",
  "description": "Writing tests for promises in jasmine is kind of a pain in the ass. jasmine-pit makes doing such things a tiny bit easier by providing an augmented version of `it()` (called `pit()`) that allows you to simply return a promise that may eventually assert expect()s (or propogate errors).",
  "bugs": {
    "url": "https://github.com/jeffmo/jasmine-pit/issues"
  },
  "_id": "jasmine-pit@1.0.4",
  "_from": "jasmine-pit@~1.0.0"
}
