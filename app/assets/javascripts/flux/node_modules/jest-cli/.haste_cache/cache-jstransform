{"version":"{\"scriptPreprocessor\":\"/Users/jeffmo/Projects/jstransform/jestPreprocessor.js\",\"rootDir\":\"/Users/jeffmo/Projects/jstransform\",\"cacheDirectory\":\"/Users/jeffmo/Projects/jest/.haste_cache\",\"globals\":{},\"moduleLoader\":\"/Users/jeffmo/Projects/jest/src/HasteModuleLoader/HasteModuleLoader.js\",\"modulePathIgnorePatterns\":[],\"testDirectoryName\":\"__tests__\",\"testEnvironment\":\"/Users/jeffmo/Projects/jest/src/JSDomEnvironment.js\",\"testFileExtensions\":[\"js\"],\"moduleFileExtensions\":[\"js\",\"json\"],\"testPathDirs\":[\"/Users/jeffmo/Projects/jstransform\"],\"testPathIgnorePatterns\":[\"/node_modules/\"],\"testRunner\":\"/Users/jeffmo/Projects/jest/src/jasmineTestRunner/jasmineTestRunner.js\",\"name\":\"jstransform\"}","objects":[{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/jestPreprocessor.js","id":"jstransform/jestPreprocessor.js","options":{},"isModule":true,"requiredModules":["jstransform/src/jstransform.js","jstransform/visitors/es6-arrow-function-visitors.js","jstransform/visitors/es6-rest-param-visitors.js"],"mtime":1400206181000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/node_modules/base62/base62.js","id":"base62/base62.js","options":{},"isModule":true,"mtime":1354634346000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/node_modules/base62/test/test.js","id":"base62/test/test.js","options":{},"isModule":true,"requiredModules":["assert","base62/base62.js"],"mtime":1355029838000},{"type":"ProjectConfiguration","path":"/Users/jeffmo/Projects/jstransform/node_modules/base62/package.json","id":"/Users/jeffmo/Projects/jstransform/node_modules/base62/package.json","data":{"author":{"name":"Andrew Nesbitt","email":"andrewnez@gmail.com","url":"http://andrew-nesbitt.com/"},"name":"base62","description":"Javascript Base62 encode/decoder","keywords":["base-62"],"version":"0.1.1","repository":{"type":"git","url":"git://github.com/andrew/base62.js.git"},"main":"base62.js","engines":{"node":"*"},"scripts":{"test":"mocha test"},"devDependencies":{"mocha":"1.7.x"},"readme":"# Base62.js \n[![build status](https://secure.travis-ci.org/andrew/base62.js.png)](http://travis-ci.org/andrew/base62.js)\n\nA javascript Base62 encode/decoder for node.js\n\n## Install\n\n    npm install base62\n\n## Usage\n\n    Base62 = require('base62')\n    Base62.encode(999)  // 'g7'\n    Base62.decode('g7') // 999\n\n## Development\n\nSource hosted at [GitHub](http://github.com/andrew/base62.js).\nReport Issues/Feature requests on [GitHub Issues](http://github.com/andrew/split/base62.js).\n\n### Note on Patches/Pull Requests\n\n * Fork the project.\n * Make your feature addition or bug fix.\n * Add tests for it. This is important so I don't break it in a future version unintentionally.\n * Send me a pull request. Bonus points for topic branches.\n\n## Copyright\n\nCopyright (c) 2012 Andrew Nesbitt. See [LICENSE](https://github.com/andrew/base62.js/blob/master/LICENSE) for details.\n","readmeFilename":"Readme.md","bugs":{"url":"https://github.com/andrew/base62.js/issues"},"homepage":"https://github.com/andrew/base62.js","_id":"base62@0.1.1","_shasum":"7b4174c2f94449753b11c2651c083da841a7b084","_from":"base62@0.1.1","_resolved":"https://registry.npmjs.org/base62/-/base62-0.1.1.tgz"},"mtime":1405032344000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/node_modules/esprima-fb/bin/esvalidate.js","id":"esprima-fb/bin/esvalidate.js","options":{},"isModule":true,"requiredModules":["fs","system","./esprima","esprima"],"mtime":1405031767000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/node_modules/esprima-fb/bin/esparse.js","id":"esprima-fb/bin/esparse.js","options":{},"isModule":true,"requiredModules":["fs","esprima"],"mtime":1405031767000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/node_modules/esprima-fb/esprima.js","id":"esprima-fb/esprima.js","options":{},"isModule":true,"mtime":1405032146000},{"type":"ProjectConfiguration","path":"/Users/jeffmo/Projects/jstransform/node_modules/esprima-fb/package.json","id":"/Users/jeffmo/Projects/jstransform/node_modules/esprima-fb/package.json","data":{"name":"esprima-fb","description":"Facebook-specific fork of the esprima project","homepage":"https://github.com/facebook/esprima/tree/fb-harmony","main":"esprima.js","bin":{"esparse":"./bin/esparse.js","esvalidate":"./bin/esvalidate.js"},"version":"4001.3001.0-dev-harmony-fb","files":["bin","test/run.js","test/runner.js","test/test.js","test/compat.js","test/reflect.js","esprima.js"],"engines":{"node":">=0.4.0"},"author":{"name":"Ariya Hidayat","email":"ariya.hidayat@gmail.com"},"maintainers":[{"name":"Jeff Morrison","email":"jeffmo@fb.com","url":"https://www.facebook.com/lbljeffmo"}],"repository":{"type":"git","url":"http://github.com/facebook/esprima.git"},"bugs":{"url":"http://issues.esprima.org"},"licenses":[{"type":"BSD","url":"http://github.com/facebook/esprima/raw/master/LICENSE.BSD"}],"devDependencies":{"jslint":"~0.1.9","eslint":"~0.1.0","istanbul":"~0.1.27","complexity-report":"~0.6.1","regenerate":"~0.5.4","unicode-6.3.0":"~0.1.0","json-diff":"~0.3.1"},"scripts":{"test":"npm run-script lint && node test/run.js && npm run-script coverage && npm run-script complexity","lint":"node tools/check-version.js && node node_modules/eslint/bin/eslint.js esprima.js && node node_modules/jslint/bin/jslint.js esprima.js","coverage":"npm run-script analyze-coverage && npm run-script check-coverage","analyze-coverage":"node node_modules/istanbul/lib/cli.js cover test/runner.js","check-coverage":"node node_modules/istanbul/lib/cli.js check-coverage --statement -8 --branch -28 --function 99.69","complexity":"npm run-script analyze-complexity && npm run-script check-complexity","analyze-complexity":"node tools/list-complexity.js","check-complexity":"node node_modules/complexity-report/src/cli.js --maxcc 31 --silent -l -w esprima.js","benchmark":"node test/benchmarks.js","benchmark-quick":"node test/benchmarks.js quick"},"readme":"**Esprima** ([esprima.org](http://esprima.org), BSD license) is a high performance,\nstandard-compliant [ECMAScript](http://www.ecma-international.org/publications/standards/Ecma-262.htm)\nparser written in ECMAScript (also popularly known as\n[JavaScript](http://en.wikipedia.org/wiki/JavaScript>JavaScript)).\nEsprima is created and maintained by [Ariya Hidayat](http://twitter.com/ariyahidayat),\nwith the help of [many contributors](https://github.com/ariya/esprima/contributors).\n\n### Features\n\n- Full support for ECMAScript 5.1 ([ECMA-262](http://www.ecma-international.org/publications/standards/Ecma-262.htm))\n- Sensible [syntax tree format](http://esprima.org/doc/index.html#ast) compatible with Mozilla\n[Parser AST](https://developer.mozilla.org/en/SpiderMonkey/Parser_API)\n- Optional tracking of syntax node location (index-based and line-column)\n- Heavily tested (> 600 [unit tests](http://esprima.org/test/) with solid statement and branch coverage)\n- Experimental support for ES6/Harmony (module, class, destructuring, ...)\n\nEsprima serves as a **building block** for some JavaScript\nlanguage tools, from [code instrumentation](http://esprima.org/demo/functiontrace.html)\nto [editor autocompletion](http://esprima.org/demo/autocomplete.html).\n\nEsprima runs on many popular web browsers, as well as other ECMAScript platforms such as\n[Rhino](http://www.mozilla.org/rhino) and [Node.js](https://npmjs.org/package/esprima).\n\nFor more information, check the web site [esprima.org](http://esprima.org).\n","readmeFilename":"README.md","_id":"esprima-fb@4001.3001.0-dev-harmony-fb","_shasum":"1bf42d280e451cc1438bd4c9baf772db954ec0f1","_from":"esprima-fb@~4001.3001.0-dev-harmony-fb"},"mtime":1405032344000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/node_modules/esprima-fb/test/compat.js","id":"esprima-fb/test/compat.js","options":{},"isModule":true,"requiredModules":["esprima-fb/esprima.js","esprima-fb/test/reflect.js"],"mtime":1405031767000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/node_modules/esprima-fb/test/reflect.js","id":"esprima-fb/test/reflect.js","options":{},"isModule":true,"mtime":1405031767000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/node_modules/esprima-fb/test/run.js","id":"esprima-fb/test/run.js","options":{},"isModule":true,"requiredModules":["child_process"],"mtime":1405031767000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/node_modules/esprima-fb/test/runner.js","id":"esprima-fb/test/runner.js","options":{},"isModule":true,"requiredModules":["esprima-fb/esprima.js","vm","fs","json-diff"],"mtime":1405031767000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/node_modules/esprima-fb/test/test.js","id":"esprima-fb/test/test.js","options":{},"isModule":true,"mtime":1405031767000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/node_modules/source-map/build/assert-shim.js","id":"source-map/build/assert-shim.js","options":{},"isModule":true,"mtime":1359745846000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/node_modules/source-map/build/mini-require.js","id":"source-map/build/mini-require.js","options":{},"isModule":true,"mtime":1359745846000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/node_modules/source-map/build/suffix-browser.js","id":"source-map/build/suffix-browser.js","options":{},"isModule":true,"requiredModules":["source-map/source-map-consumer","source-map/source-map-generator","source-map/source-node"],"mtime":1380581787000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/node_modules/source-map/build/test-prefix.js","id":"source-map/build/test-prefix.js","options":{},"isModule":true,"mtime":1359745846000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/node_modules/source-map/build/test-suffix.js","id":"source-map/build/test-suffix.js","options":{},"isModule":true,"mtime":1359745846000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/node_modules/source-map/lib/source-map/array-set.js","id":"source-map/lib/source-map/array-set.js","options":{},"isModule":true,"requiredModules":["amdefine/amdefine.js","source-map/lib/source-map/util.js"],"mtime":1378513040000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/node_modules/source-map/lib/source-map/base64-vlq.js","id":"source-map/lib/source-map/base64-vlq.js","options":{},"isModule":true,"requiredModules":["amdefine/amdefine.js","source-map/lib/source-map/base64.js"],"mtime":1372359300000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/node_modules/source-map/lib/source-map/base64.js","id":"source-map/lib/source-map/base64.js","options":{},"isModule":true,"requiredModules":["amdefine/amdefine.js"],"mtime":1372359300000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/node_modules/source-map/lib/source-map/binary-search.js","id":"source-map/lib/source-map/binary-search.js","options":{},"isModule":true,"requiredModules":["amdefine/amdefine.js"],"mtime":1380581787000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/node_modules/source-map/lib/source-map/source-map-consumer.js","id":"source-map/lib/source-map/source-map-consumer.js","options":{},"isModule":true,"requiredModules":["amdefine/amdefine.js","source-map/lib/source-map/util.js","source-map/lib/source-map/binary-search.js","source-map/lib/source-map/array-set.js","source-map/lib/source-map/base64-vlq.js"],"mtime":1383330668000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/node_modules/source-map/lib/source-map/source-map-generator.js","id":"source-map/lib/source-map/source-map-generator.js","options":{},"isModule":true,"requiredModules":["amdefine/amdefine.js","source-map/lib/source-map/base64-vlq.js","source-map/lib/source-map/util.js","source-map/lib/source-map/array-set.js"],"mtime":1380581787000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/node_modules/source-map/lib/source-map/source-node.js","id":"source-map/lib/source-map/source-node.js","options":{},"isModule":true,"requiredModules":["amdefine/amdefine.js","source-map/lib/source-map/source-map-generator.js","source-map/lib/source-map/util.js"],"mtime":1380581787000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/node_modules/source-map/lib/source-map/util.js","id":"source-map/lib/source-map/util.js","options":{},"isModule":true,"requiredModules":["amdefine/amdefine.js"],"mtime":1380581787000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/node_modules/source-map/lib/source-map.js","id":"source-map/lib/source-map.js","options":{},"isModule":true,"requiredModules":["source-map/lib/source-map/source-map-generator.js","source-map/lib/source-map/source-map-consumer.js","source-map/lib/source-map/source-node.js"],"mtime":1359745846000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/node_modules/source-map/Makefile.dryice.js","id":"source-map/Makefile.dryice.js","options":{},"isModule":true,"requiredModules":["path","fs","dryice"],"mtime":1372359300000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/node_modules/source-map/node_modules/amdefine/amdefine.js","id":"amdefine/amdefine.js","options":{},"isModule":true,"requiredModules":["path"],"mtime":1381811973000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/node_modules/source-map/node_modules/amdefine/intercept.js","id":"amdefine/intercept.js","options":{},"isModule":true,"requiredModules":["module","fs","amdefine/amdefine.js"],"mtime":1381804832000},{"type":"ProjectConfiguration","path":"/Users/jeffmo/Projects/jstransform/node_modules/source-map/node_modules/amdefine/package.json","id":"/Users/jeffmo/Projects/jstransform/node_modules/source-map/node_modules/amdefine/package.json","data":{"name":"amdefine","description":"Provide AMD's define() API for declaring modules in the AMD format","version":"0.1.0","homepage":"http://github.com/jrburke/amdefine","author":{"name":"James Burke","email":"jrburke@gmail.com","url":"http://github.com/jrburke"},"licenses":[{"type":"BSD","url":"https://github.com/jrburke/amdefine/blob/master/LICENSE"},{"type":"MIT","url":"https://github.com/jrburke/amdefine/blob/master/LICENSE"}],"repository":{"type":"git","url":"https://github.com/jrburke/amdefine.git"},"main":"./amdefine.js","engines":{"node":">=0.4.2"},"readme":"# amdefine\n\nA module that can be used to implement AMD's define() in Node. This allows you\nto code to the AMD API and have the module work in node programs without\nrequiring those other programs to use AMD.\n\n## Usage\n\n**1)** Update your package.json to indicate amdefine as a dependency:\n\n```javascript\n    \"dependencies\": {\n        \"amdefine\": \">=0.1.0\"\n    }\n```\n\nThen run `npm install` to get amdefine into your project.\n\n**2)** At the top of each module that uses define(), place this code:\n\n```javascript\nif (typeof define !== 'function') { var define = require('amdefine')(module) }\n```\n\n**Only use these snippets** when loading amdefine. If you preserve the basic structure,\nwith the braces, it will be stripped out when using the [RequireJS optimizer](#optimizer).\n\nYou can add spaces, line breaks and even require amdefine with a local path, but\nkeep the rest of the structure to get the stripping behavior.\n\nAs you may know, because `if` statements in JavaScript don't have their own scope, the var\ndeclaration in the above snippet is made whether the `if` expression is truthy or not. If\nRequireJS is loaded then the declaration is superfluous because `define` is already already\ndeclared in the same scope in RequireJS. Fortunately JavaScript handles multiple `var`\ndeclarations of the same variable in the same scope gracefully.\n\nIf you want to deliver amdefine.js with your code rather than specifying it as a dependency\nwith npm, then just download the latest release and refer to it using a relative path:\n\n[Latest Version](https://github.com/jrburke/amdefine/raw/latest/amdefine.js)\n\n### amdefine/intercept\n\nConsider this very experimental.\n\nInstead of pasting the piece of text for the amdefine setup of a `define`\nvariable in each module you create or consume, you can use `amdefine/intercept`\ninstead. It will automatically insert the above snippet in each .js file loaded\nby Node.\n\n**Warning**: you should only use this if you are creating an application that\nis consuming AMD style defined()'d modules that are distributed via npm and want\nto run that code in Node.\n\nFor library code where you are not sure if it will be used by others in Node or\nin the browser, then explicitly depending on amdefine and placing the code\nsnippet above is suggested path, instead of using `amdefine/intercept`. The\nintercept module affects all .js files loaded in the Node app, and it is\ninconsiderate to modify global state like that unless you are also controlling\nthe top level app.\n\n#### Why distribute AMD-style nodes via npm?\n\nnpm has a lot of weaknesses for front-end use (installed layout is not great,\nshould have better support for the `baseUrl + moduleID + '.js' style of loading,\nsingle file JS installs), but some people want a JS package manager and are\nwilling to live with those constraints. If that is you, but still want to author\nin AMD style modules to get dynamic require([]), better direct source usage and\npowerful loader plugin support in the browser, then this tool can help.\n\n#### amdefine/intercept usage\n\nJust require it in your top level app module (for example index.js, server.js):\n\n```javascript\nrequire('amdefine/intercept');\n```\n\nThe module does not return a value, so no need to assign the result to a local\nvariable.\n\nThen just require() code as you normally would with Node's require(). Any .js\nloaded after the intercept require will have the amdefine check injected in\nthe .js source as it is loaded. It does not modify the source on disk, just\nprepends some content to the text of the module as it is loaded by Node.\n\n#### How amdefine/intercept works\n\nIt overrides the `Module._extensions['.js']` in Node to automatically prepend\nthe amdefine snippet above. So, it will affect any .js file loaded by your\napp.\n\n## define() usage\n\nIt is best if you use the anonymous forms of define() in your module:\n\n```javascript\ndefine(function (require) {\n    var dependency = require('dependency');\n});\n```\n\nor\n\n```javascript\ndefine(['dependency'], function (dependency) {\n\n});\n```\n\n## RequireJS optimizer integration. <a name=\"optimizer\"></name>\n\nVersion 1.0.3 of the [RequireJS optimizer](http://requirejs.org/docs/optimization.html)\nwill have support for stripping the `if (typeof define !== 'function')` check\nmentioned above, so you can include this snippet for code that runs in the\nbrowser, but avoid taking the cost of the if() statement once the code is\noptimized for deployment.\n\n## Node 0.4 Support\n\nIf you want to support Node 0.4, then add `require` as the second parameter to amdefine:\n\n```javascript\n//Only if you want Node 0.4. If using 0.5 or later, use the above snippet.\nif (typeof define !== 'function') { var define = require('amdefine')(module, require) }\n```\n\n## Limitations\n\n### Synchronous vs Asynchronous\n\namdefine creates a define() function that is callable by your code. It will\nexecute and trace dependencies and call the factory function *synchronously*,\nto keep the behavior in line with Node's synchronous dependency tracing.\n\nThe exception: calling AMD's callback-style require() from inside a factory\nfunction. The require callback is called on process.nextTick():\n\n```javascript\ndefine(function (require) {\n    require(['a'], function(a) {\n        //'a' is loaded synchronously, but\n        //this callback is called on process.nextTick().\n    });\n});\n```\n\n### Loader Plugins\n\nLoader plugins are supported as long as they call their load() callbacks\nsynchronously. So ones that do network requests will not work. However plugins\nlike [text](http://requirejs.org/docs/api.html#text) can load text files locally.\n\nThe plugin API's `load.fromText()` is **not supported** in amdefine, so this means\ntranspiler plugins like the [CoffeeScript loader plugin](https://github.com/jrburke/require-cs)\nwill not work. This may be fixable, but it is a bit complex, and I do not have\nenough node-fu to figure it out yet. See the source for amdefine.js if you want\nto get an idea of the issues involved.\n\n## Tests\n\nTo run the tests, cd to **tests** and run:\n\n```\nnode all.js\nnode all-intercept.js\n```\n\n## License\n\nNew BSD and MIT. Check the LICENSE file for all the details.\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/jrburke/amdefine/issues"},"_id":"amdefine@0.1.0","_from":"amdefine@>=0.0.4","scripts":{}},"mtime":1405032344000},{"type":"ProjectConfiguration","path":"/Users/jeffmo/Projects/jstransform/node_modules/source-map/package.json","id":"/Users/jeffmo/Projects/jstransform/node_modules/source-map/package.json","data":{"name":"source-map","description":"Generates and consumes source maps","version":"0.1.31","homepage":"https://github.com/mozilla/source-map","author":{"name":"Nick Fitzgerald","email":"nfitzgerald@mozilla.com"},"contributors":[{"name":"Tobias Koppers","email":"tobias.koppers@googlemail.com"},{"name":"Duncan Beevers","email":"duncan@dweebd.com"},{"name":"Stephen Crane","email":"scrane@mozilla.com"},{"name":"Ryan Seddon","email":"seddon.ryan@gmail.com"},{"name":"Miles Elam","email":"miles.elam@deem.com"},{"name":"Mihai Bazon","email":"mihai.bazon@gmail.com"},{"name":"Michael Ficarra","email":"github.public.email@michael.ficarra.me"},{"name":"Todd Wolfson","email":"todd@twolfson.com"},{"name":"Alexander Solovyov","email":"alexander@solovyov.net"},{"name":"Felix Gnass","email":"fgnass@gmail.com"},{"name":"Conrad Irwin","email":"conrad.irwin@gmail.com"},{"name":"usrbincc","email":"usrbincc@yahoo.com"},{"name":"David Glasser","email":"glasser@davidglasser.net"},{"name":"Chase Douglas","email":"chase@newrelic.com"},{"name":"Evan Wallace","email":"evan.exe@gmail.com"},{"name":"Heather Arthur","email":"fayearthur@gmail.com"}],"repository":{"type":"git","url":"http://github.com/mozilla/source-map.git"},"directories":{"lib":"./lib"},"main":"./lib/source-map.js","engines":{"node":">=0.8.0"},"licenses":[{"type":"BSD","url":"http://opensource.org/licenses/BSD-3-Clause"}],"dependencies":{"amdefine":">=0.0.4"},"devDependencies":{"dryice":">=0.4.8"},"scripts":{"test":"node test/run-tests.js","build":"node Makefile.dryice.js"},"readme":"# Source Map\n\nThis is a library to generate and consume the source map format\n[described here][format].\n\nThis library is written in the Asynchronous Module Definition format, and works\nin the following environments:\n\n* Modern Browsers supporting ECMAScript 5 (either after the build, or with an\n  AMD loader such as RequireJS)\n\n* Inside Firefox (as a JSM file, after the build)\n\n* With NodeJS versions 0.8.X and higher\n\n## Node\n\n    $ npm install source-map\n\n## Building from Source (for everywhere else)\n\nInstall Node and then run\n\n    $ git clone https://fitzgen@github.com/mozilla/source-map.git\n    $ cd source-map\n    $ npm link .\n\nNext, run\n\n    $ node Makefile.dryice.js\n\nThis should spew a bunch of stuff to stdout, and create the following files:\n\n* `dist/source-map.js` - The unminified browser version.\n\n* `dist/source-map.min.js` - The minified browser version.\n\n* `dist/SourceMap.jsm` - The JavaScript Module for inclusion in Firefox source.\n\n## Examples\n\n### Consuming a source map\n\n    var rawSourceMap = {\n      version: 3,\n      file: 'min.js',\n      names: ['bar', 'baz', 'n'],\n      sources: ['one.js', 'two.js'],\n      sourceRoot: 'http://example.com/www/js/',\n      mappings: 'CAAC,IAAI,IAAM,SAAUA,GAClB,OAAOC,IAAID;CCDb,IAAI,IAAM,SAAUE,GAClB,OAAOA'\n    };\n\n    var smc = new SourceMapConsumer(rawSourceMap);\n\n    console.log(smc.sources);\n    // [ 'http://example.com/www/js/one.js',\n    //   'http://example.com/www/js/two.js' ]\n\n    console.log(smc.originalPositionFor({\n      line: 2,\n      column: 28\n    }));\n    // { source: 'http://example.com/www/js/two.js',\n    //   line: 2,\n    //   column: 10,\n    //   name: 'n' }\n\n    console.log(smc.generatedPositionFor({\n      source: 'http://example.com/www/js/two.js',\n      line: 2,\n      column: 10\n    }));\n    // { line: 2, column: 28 }\n\n    smc.eachMapping(function (m) {\n      // ...\n    });\n\n### Generating a source map\n\nIn depth guide:\n[**Compiling to JavaScript, and Debugging with Source Maps**](https://hacks.mozilla.org/2013/05/compiling-to-javascript-and-debugging-with-source-maps/)\n\n#### With SourceNode (high level API)\n\n    function compile(ast) {\n      switch (ast.type) {\n      case 'BinaryExpression':\n        return new SourceNode(\n          ast.location.line,\n          ast.location.column,\n          ast.location.source,\n          [compile(ast.left), \" + \", compile(ast.right)]\n        );\n      case 'Literal':\n        return new SourceNode(\n          ast.location.line,\n          ast.location.column,\n          ast.location.source,\n          String(ast.value)\n        );\n      // ...\n      default:\n        throw new Error(\"Bad AST\");\n      }\n    }\n\n    var ast = parse(\"40 + 2\", \"add.js\");\n    console.log(compile(ast).toStringWithSourceMap({\n      file: 'add.js'\n    }));\n    // { code: '40 + 2',\n    //   map: [object SourceMapGenerator] }\n\n#### With SourceMapGenerator (low level API)\n\n    var map = new SourceMapGenerator({\n      file: \"source-mapped.js\"\n    });\n\n    map.addMapping({\n      generated: {\n        line: 10,\n        column: 35\n      },\n      source: \"foo.js\",\n      original: {\n        line: 33,\n        column: 2\n      },\n      name: \"christopher\"\n    });\n\n    console.log(map.toString());\n    // '{\"version\":3,\"file\":\"source-mapped.js\",\"sources\":[\"foo.js\"],\"names\":[\"christopher\"],\"mappings\":\";;;;;;;;;mCAgCEA\"}'\n\n## API\n\nGet a reference to the module:\n\n    // NodeJS\n    var sourceMap = require('source-map');\n\n    // Browser builds\n    var sourceMap = window.sourceMap;\n\n    // Inside Firefox\n    let sourceMap = {};\n    Components.utils.import('resource:///modules/devtools/SourceMap.jsm', sourceMap);\n\n### SourceMapConsumer\n\nA SourceMapConsumer instance represents a parsed source map which we can query\nfor information about the original file positions by giving it a file position\nin the generated source.\n\n#### new SourceMapConsumer(rawSourceMap)\n\nThe only parameter is the raw source map (either as a string which can be\n`JSON.parse`'d, or an object). According to the spec, source maps have the\nfollowing attributes:\n\n* `version`: Which version of the source map spec this map is following.\n\n* `sources`: An array of URLs to the original source files.\n\n* `names`: An array of identifiers which can be referrenced by individual\n  mappings.\n\n* `sourceRoot`: Optional. The URL root from which all sources are relative.\n\n* `sourcesContent`: Optional. An array of contents of the original source files.\n\n* `mappings`: A string of base64 VLQs which contain the actual mappings.\n\n* `file`: The generated filename this source map is associated with.\n\n#### SourceMapConsumer.prototype.originalPositionFor(generatedPosition)\n\nReturns the original source, line, and column information for the generated\nsource's line and column positions provided. The only argument is an object with\nthe following properties:\n\n* `line`: The line number in the generated source.\n\n* `column`: The column number in the generated source.\n\nand an object is returned with the following properties:\n\n* `source`: The original source file, or null if this information is not\n  available.\n\n* `line`: The line number in the original source, or null if this information is\n  not available.\n\n* `column`: The column number in the original source, or null or null if this\n  information is not available.\n\n* `name`: The original identifier, or null if this information is not available.\n\n#### SourceMapConsumer.prototype.generatedPositionFor(originalPosition)\n\nReturns the generated line and column information for the original source,\nline, and column positions provided. The only argument is an object with\nthe following properties:\n\n* `source`: The filename of the original source.\n\n* `line`: The line number in the original source.\n\n* `column`: The column number in the original source.\n\nand an object is returned with the following properties:\n\n* `line`: The line number in the generated source, or null.\n\n* `column`: The column number in the generated source, or null.\n\n#### SourceMapConsumer.prototype.sourceContentFor(source)\n\nReturns the original source content for the source provided. The only\nargument is the URL of the original source file.\n\n#### SourceMapConsumer.prototype.eachMapping(callback, context, order)\n\nIterate over each mapping between an original source/line/column and a\ngenerated line/column in this source map.\n\n* `callback`: The function that is called with each mapping. Mappings have the\n  form `{ source, generatedLine, generatedColumn, originalLine, originalColumn,\n  name }`\n\n* `context`: Optional. If specified, this object will be the value of `this`\n  every time that `callback` is called.\n\n* `order`: Either `SourceMapConsumer.GENERATED_ORDER` or\n  `SourceMapConsumer.ORIGINAL_ORDER`. Specifies whether you want to iterate over\n  the mappings sorted by the generated file's line/column order or the\n  original's source/line/column order, respectively. Defaults to\n  `SourceMapConsumer.GENERATED_ORDER`.\n\n### SourceMapGenerator\n\nAn instance of the SourceMapGenerator represents a source map which is being\nbuilt incrementally.\n\n#### new SourceMapGenerator(startOfSourceMap)\n\nTo create a new one, you must pass an object with the following properties:\n\n* `file`: The filename of the generated source that this source map is\n  associated with.\n\n* `sourceRoot`: An optional root for all relative URLs in this source map.\n\n#### SourceMapGenerator.fromSourceMap(sourceMapConsumer)\n\nCreates a new SourceMapGenerator based on a SourceMapConsumer\n\n* `sourceMapConsumer` The SourceMap.\n\n#### SourceMapGenerator.prototype.addMapping(mapping)\n\nAdd a single mapping from original source line and column to the generated\nsource's line and column for this source map being created. The mapping object\nshould have the following properties:\n\n* `generated`: An object with the generated line and column positions.\n\n* `original`: An object with the original line and column positions.\n\n* `source`: The original source file (relative to the sourceRoot).\n\n* `name`: An optional original token name for this mapping.\n\n#### SourceMapGenerator.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for an original source file.\n\n* `sourceFile` the URL of the original source file.\n\n* `sourceContent` the content of the source file.\n\n#### SourceMapGenerator.prototype.applySourceMap(sourceMapConsumer[, sourceFile])\n\nApplies a SourceMap for a source file to the SourceMap.\nEach mapping to the supplied source file is rewritten using the\nsupplied SourceMap. Note: The resolution for the resulting mappings\nis the minimium of this map and the supplied map.\n\n* `sourceMapConsumer`: The SourceMap to be applied.\n\n* `sourceFile`: Optional. The filename of the source file.\n  If omitted, sourceMapConsumer.file will be used.\n\n#### SourceMapGenerator.prototype.toString()\n\nRenders the source map being generated to a string.\n\n### SourceNode\n\nSourceNodes provide a way to abstract over interpolating and/or concatenating\nsnippets of generated JavaScript source code, while maintaining the line and\ncolumn information associated between those snippets and the original source\ncode. This is useful as the final intermediate representation a compiler might\nuse before outputting the generated JS and source map.\n\n#### new SourceNode(line, column, source[, chunk[, name]])\n\n* `line`: The original line number associated with this source node, or null if\n  it isn't associated with an original line.\n\n* `column`: The original column number associated with this source node, or null\n  if it isn't associated with an original column.\n\n* `source`: The original source's filename.\n\n* `chunk`: Optional. Is immediately passed to `SourceNode.prototype.add`, see\n  below.\n\n* `name`: Optional. The original identifier.\n\n#### SourceNode.fromStringWithSourceMap(code, sourceMapConsumer)\n\nCreates a SourceNode from generated code and a SourceMapConsumer.\n\n* `code`: The generated code\n\n* `sourceMapConsumer` The SourceMap for the generated code\n\n#### SourceNode.prototype.add(chunk)\n\nAdd a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.prepend(chunk)\n\nPrepend a chunk of generated JS to this source node.\n\n* `chunk`: A string snippet of generated JS code, another instance of\n   `SourceNode`, or an array where each member is one of those things.\n\n#### SourceNode.prototype.setSourceContent(sourceFile, sourceContent)\n\nSet the source content for a source file. This will be added to the\n`SourceMap` in the `sourcesContent` field.\n\n* `sourceFile`: The filename of the source file\n\n* `sourceContent`: The content of the source file\n\n#### SourceNode.prototype.walk(fn)\n\nWalk over the tree of JS snippets in this node and its children. The walking\nfunction is called once for each snippet of JS and is passed that snippet and\nthe its original associated source's line/column location.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.walkSourceContents(fn)\n\nWalk over the tree of SourceNodes. The walking function is called for each\nsource file content and is passed the filename and source content.\n\n* `fn`: The traversal function.\n\n#### SourceNode.prototype.join(sep)\n\nLike `Array.prototype.join` except for SourceNodes. Inserts the separator\nbetween each of this source node's children.\n\n* `sep`: The separator.\n\n#### SourceNode.prototype.replaceRight(pattern, replacement)\n\nCall `String.prototype.replace` on the very right-most source snippet. Useful\nfor trimming whitespace from the end of a source node, etc.\n\n* `pattern`: The pattern to replace.\n\n* `replacement`: The thing to replace the pattern with.\n\n#### SourceNode.prototype.toString()\n\nReturn the string representation of this source node. Walks over the tree and\nconcatenates all the various snippets together to one string.\n\n### SourceNode.prototype.toStringWithSourceMap(startOfSourceMap)\n\nReturns the string representation of this tree of source nodes, plus a\nSourceMapGenerator which contains all the mappings between the generated and\noriginal sources.\n\nThe arguments are the same as those to `new SourceMapGenerator`.\n\n## Tests\n\n[![Build Status](https://travis-ci.org/mozilla/source-map.png?branch=master)](https://travis-ci.org/mozilla/source-map)\n\nInstall NodeJS version 0.8.0 or greater, then run `node test/run-tests.js`.\n\nTo add new tests, create a new file named `test/test-<your new test name>.js`\nand export your test functions with names that start with \"test\", for example\n\n    exports[\"test doing the foo bar\"] = function (assert, util) {\n      ...\n    };\n\nThe new test will be located automatically when you run the suite.\n\nThe `util` argument is the test utility module located at `test/source-map/util`.\n\nThe `assert` argument is a cut down version of node's assert module. You have\naccess to the following assertion functions:\n\n* `doesNotThrow`\n\n* `equal`\n\n* `ok`\n\n* `strictEqual`\n\n* `throws`\n\n(The reason for the restricted set of test functions is because we need the\ntests to run inside Firefox's test suite as well and so the assert module is\nshimmed in that environment. See `build/assert-shim.js`.)\n\n[format]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k/edit\n[feature]: https://wiki.mozilla.org/DevTools/Features/SourceMap\n[Dryice]: https://github.com/mozilla/dryice\n","readmeFilename":"README.md","bugs":{"url":"https://github.com/mozilla/source-map/issues"},"_id":"source-map@0.1.31","_from":"source-map@0.1.31"},"mtime":1405032344000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/node_modules/source-map/test/run-tests.js","id":"source-map/test/run-tests.js","options":{},"isModule":true,"requiredModules":["assert","fs","path","source-map/test/source-map/util.js"],"mtime":1380581787000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/node_modules/source-map/test/source-map/test-api.js","id":"source-map/test/source-map/test-api.js","options":{},"isModule":true,"requiredModules":["amdefine/amdefine.js","source-map/lib/source-map.js"],"mtime":1372359300000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/node_modules/source-map/test/source-map/test-array-set.js","id":"source-map/test/source-map/test-array-set.js","options":{},"isModule":true,"requiredModules":["amdefine/amdefine.js","source-map/lib/source-map/array-set.js"],"mtime":1377131128000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/node_modules/source-map/test/source-map/test-base64-vlq.js","id":"source-map/test/source-map/test-base64-vlq.js","options":{},"isModule":true,"requiredModules":["amdefine/amdefine.js","source-map/lib/source-map/base64-vlq.js"],"mtime":1372359300000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/node_modules/source-map/test/source-map/test-base64.js","id":"source-map/test/source-map/test-base64.js","options":{},"isModule":true,"requiredModules":["amdefine/amdefine.js","source-map/lib/source-map/base64.js"],"mtime":1372359300000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/node_modules/source-map/test/source-map/test-binary-search.js","id":"source-map/test/source-map/test-binary-search.js","options":{},"isModule":true,"requiredModules":["amdefine/amdefine.js","source-map/lib/source-map/binary-search.js"],"mtime":1372359300000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/node_modules/source-map/test/source-map/test-dog-fooding.js","id":"source-map/test/source-map/test-dog-fooding.js","options":{},"isModule":true,"requiredModules":["amdefine/amdefine.js","source-map/lib/source-map/source-map-consumer.js","source-map/lib/source-map/source-map-generator.js"],"mtime":1379726834000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/node_modules/source-map/test/source-map/test-source-map-consumer.js","id":"source-map/test/source-map/test-source-map-consumer.js","options":{},"isModule":true,"requiredModules":["amdefine/amdefine.js","source-map/lib/source-map/source-map-consumer.js","source-map/lib/source-map/source-map-generator.js"],"mtime":1380581787000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/node_modules/source-map/test/source-map/test-source-map-generator.js","id":"source-map/test/source-map/test-source-map-generator.js","options":{},"isModule":true,"requiredModules":["amdefine/amdefine.js","source-map/lib/source-map/source-map-generator.js","source-map/lib/source-map/source-map-consumer.js","source-map/lib/source-map/source-node.js","source-map/test/source-map/util.js"],"mtime":1377131128000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/node_modules/source-map/test/source-map/test-source-node.js","id":"source-map/test/source-map/test-source-node.js","options":{},"isModule":true,"requiredModules":["amdefine/amdefine.js","source-map/lib/source-map/source-map-generator.js","source-map/lib/source-map/source-map-consumer.js","source-map/lib/source-map/source-node.js"],"mtime":1380581787000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/node_modules/source-map/test/source-map/util.js","id":"source-map/test/source-map/util.js","options":{},"isModule":true,"requiredModules":["amdefine/amdefine.js","source-map/lib/source-map/util.js"],"mtime":1380581787000},{"type":"ProjectConfiguration","path":"/Users/jeffmo/Projects/jstransform/package.json","id":"/Users/jeffmo/Projects/jstransform/package.json","data":{"name":"jstransform","version":"6.0.1","description":"A simple AST visitor-based JS transformer","contributors":[{"name":"Jeff Morrison","email":"jeffmo@fb.com"}],"main":"src/jstransform","repository":{"type":"git","url":"git@github.com:facebook/jstransform.git"},"keywords":["transformer","compiler","syntax","visitor"],"dependencies":{"base62":"0.1.1","esprima-fb":"~4001.3001.0-dev-harmony-fb","source-map":"0.1.31"},"licenses":[{"type":"Apache-2.0","url":"http://www.apache.org/licenses/LICENSE-2.0"}],"engines":{"node":">=0.8.8"},"devDependencies":{"jest-cli":"^0.1.5"},"jest":{"scriptPreprocessor":"<rootDir>/jestPreprocessor.js"},"scripts":{"prepublish":"jest","test":"jest"}},"mtime":1405032435000},{"type":"JSTest","path":"/Users/jeffmo/Projects/jstransform/src/__tests__/jstransform-test.js","id":"jstransform-test","contacts":["jeffmo@fb.com"],"requiredModules":["mock-modules","esprima-fb","../jstransform"],"mtime":1403999162000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/src/docblock.js","id":"jstransform/src/docblock.js","options":{},"isModule":true,"mtime":1398225358000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/src/jstransform.js","id":"jstransform/src/jstransform.js","options":{},"isModule":true,"requiredModules":["esprima-fb/esprima.js","jstransform/src/utils.js","source-map/lib/source-map.js"],"mtime":1403999162000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/src/utils.js","id":"jstransform/src/utils.js","options":{},"isModule":true,"requiredModules":["esprima-fb/esprima.js","jstransform/src/docblock.js"],"mtime":1405032339000},{"type":"JSTest","path":"/Users/jeffmo/Projects/jstransform/visitors/__tests__/es6-arrow-function-visitors-test.js","id":"es6-arrow-function-visitors-test","contacts":[],"requiredModules":["mock-modules","../es6-arrow-function-visitors","../../src/jstransform"],"mtime":1403999162000},{"type":"JSTest","path":"/Users/jeffmo/Projects/jstransform/visitors/__tests__/es6-class-visitors-test.js","id":"es6-class-visitors-test","contacts":["jeffmo@fb.com"],"requiredModules":["mock-modules","../../src/jstransform","../es6-class-visitors","../es6-arrow-function-visitors"],"mtime":1403999162000},{"type":"JSTest","path":"/Users/jeffmo/Projects/jstransform/visitors/__tests__/es6-destructuring-visitors-test.js","id":"es6-destructuring-visitors-test","contacts":["dmitrys@fb.com"],"requiredModules":["mock-modules","../../src/jstransform","../es6-destructuring-visitors","../es6-object-concise-method-visitors","../es6-object-short-notation-visitors","../es6-rest-param-visitors","../es6-class-visitors","../es6-arrow-function-visitors"],"mtime":1403999162000},{"type":"JSTest","path":"/Users/jeffmo/Projects/jstransform/visitors/__tests__/es6-object-concise-method-visitors-test.js","id":"es6-object-concise-method-visitors-test","contacts":[],"requiredModules":["mock-modules","../es6-object-concise-method-visitors","../es6-rest-param-visitors","../../src/jstransform"],"mtime":1403999162000},{"type":"JSTest","path":"/Users/jeffmo/Projects/jstransform/visitors/__tests__/es6-object-short-notation-visitors-test.js","id":"es6-object-short-notation-visitors-test","contacts":[],"requiredModules":["mock-modules","../../src/jstransform","../es6-object-short-notation-visitors","../es6-destructuring-visitors"],"mtime":1403999162000},{"type":"JSTest","path":"/Users/jeffmo/Projects/jstransform/visitors/__tests__/es6-rest-param-visitors-test.js","id":"es6-rest-param-visitors-test","contacts":[],"requiredModules":["mock-modules","../es6-arrow-function-visitors","../es6-class-visitors","../es6-rest-param-visitors","../../src/jstransform"],"mtime":1403999162000},{"type":"JSTest","path":"/Users/jeffmo/Projects/jstransform/visitors/__tests__/es6-template-visitors-test.js","id":"es6-template-visitors-test","contacts":["mroch@fb.com"],"requiredModules":["mock-modules","../es6-template-visitors","../../src/jstransform"],"mtime":1403999162000},{"type":"JSTest","path":"/Users/jeffmo/Projects/jstransform/visitors/__tests__/es7-rest-property-helpers-test.js","id":"es7-rest-property-helpers-test","contacts":["sema@fb.com"],"requiredModules":["mock-modules","../../src/jstransform","../es6-destructuring-visitors"],"mtime":1405363009000},{"type":"JSTest","path":"/Users/jeffmo/Projects/jstransform/visitors/__tests__/es7-spread-property-visitors-test.js","id":"es7-spread-property-visitors-test","contacts":["sema@fb.com"],"requiredModules":["mock-modules","../../src/jstransform","../es6-object-short-notation-visitors","../es7-spread-property-visitors"],"mtime":1403999162000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/visitors/es6-arrow-function-visitors.js","id":"jstransform/visitors/es6-arrow-function-visitors.js","options":{},"isModule":true,"requiredModules":["jstransform/visitors/es6-rest-param-visitors.js","jstransform/visitors/es6-destructuring-visitors.js","esprima-fb/esprima.js","jstransform/src/utils.js"],"mtime":1403999162000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/visitors/es6-class-visitors.js","id":"jstransform/visitors/es6-class-visitors.js","options":{},"isModule":true,"requiredModules":["base62/base62.js","esprima-fb/esprima.js","jstransform/src/utils.js"],"mtime":1405032339000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/visitors/es6-destructuring-visitors.js","id":"jstransform/visitors/es6-destructuring-visitors.js","options":{},"isModule":true,"requiredModules":["esprima-fb/esprima.js","jstransform/src/utils.js","jstransform/visitors/es6-rest-param-visitors.js","jstransform/visitors/es7-rest-property-helpers.js"],"mtime":1405363009000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/visitors/es6-object-concise-method-visitors.js","id":"jstransform/visitors/es6-object-concise-method-visitors.js","options":{},"isModule":true,"requiredModules":["esprima-fb/esprima.js","jstransform/src/utils.js"],"mtime":1398225359000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/visitors/es6-object-short-notation-visitors.js","id":"jstransform/visitors/es6-object-short-notation-visitors.js","options":{},"isModule":true,"requiredModules":["esprima-fb/esprima.js","jstransform/src/utils.js"],"mtime":1403125445000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/visitors/es6-rest-param-visitors.js","id":"jstransform/visitors/es6-rest-param-visitors.js","options":{},"isModule":true,"requiredModules":["esprima-fb/esprima.js","jstransform/src/utils.js"],"mtime":1405032339000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/visitors/es6-template-visitors.js","id":"jstransform/visitors/es6-template-visitors.js","options":{},"isModule":true,"requiredModules":["esprima-fb/esprima.js","jstransform/src/utils.js"],"mtime":1400201521000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/visitors/es7-rest-property-helpers.js","id":"jstransform/visitors/es7-rest-property-helpers.js","options":{},"isModule":true,"requiredModules":["esprima-fb/esprima.js","jstransform/src/utils.js"],"mtime":1405363009000},{"type":"JS","path":"/Users/jeffmo/Projects/jstransform/visitors/es7-spread-property-visitors.js","id":"jstransform/visitors/es7-spread-property-visitors.js","options":{},"isModule":true,"requiredModules":["esprima-fb/esprima.js","jstransform/src/utils.js"],"mtime":1403999162000}]}